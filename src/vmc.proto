syntax = 'proto3';

package org.ga4gh.vmc;


enum Completeness { /**
Declares the completeness of haplotype or genotype definitions.
		*/
  UNKNOWN = 0;		/// Other alleles or haplotypes may exist
  UNSPECIFIED = 1;	/// Other alleles or haplotypes exist but are not specified
  COMPLETE = 2;		/// All alleles or haplotypes are included in this definition
}

message Identifier { /**
  Identifier is a namespaced accession to an object.  May be
  represented as a URI as namespace:accession.
  */

  string namespace = 1;   /// name of the object authority or algorithm
  string accession = 2;   /// replacement sequence; empty for deletion
}

message Sequence { /**
  A biological sequence, represented using 1-letter nucleic or amino
  acids.
		      
  */
  string id = 1;		/// Internal Sequence id
  string sequence = 2;		/// sequence itself
}

message SequenceIdentifier { /*
  Represents an association between a sequence (via sequence_id) and
  an identifier.
  */  
  string sequence_id = 1;	/// Internal Sequence id 
  Identifier identifier = 2;	/// identifier
}

message Interval {  /**
  Represents the definite (i.e., not fuzzy) location of a sequence
  feature using an interval of interbase coordinates.

  Interbase coordinates refer to the points *between* residues.  For
  a sequence of length n, 0 ≤ start ≤ end ≤ n, where 0 refers to the
  point before the start of the sequence, n refers to the point at
  the end of the sequence.  An interval in which start == end is a
  zero width point between two nucleotides.  See
  http://gmod.org/wiki/Introduction_to_Chado#Interbase_Coordinates
  for more information.
  */

  uint64 start = 1;	/// start position
  uint64 end = 2;	/// end position
}

message Position { /**
  */
  /* use oneof? */
  enum Type { INTERVAL = 0; }
  Type type = 1;
  Interval interval = 2;
}

message Location { /**
  Represents a specific position on a specific sequence.
  */

  string id = 1;		/// Location identifier
  string sequence_id = 2; 	/// sequence id
  Position position = 3; 	/// position of sequence change on seqref
}

message Allele { /**
  Allele represents a single contiguous change on a specific reference sequence
  */

  string id = 1;		/// Alelle identifier
  string location_id = 2;	/// Location of feature
  string replacement = 3;	/// replacement sequence
}

message Haplotype { /**
  Haplotype represents a collection of phased changes on a single
  reference.
  */

  string id = 1;	      /// Haplotype identifier
  string sequence_id = 2;     /// Alleles are defined on this sequence
  Completeness completeness = 3;  /// Completeness of Haplotype definition
  repeated string allele_ids = 4; /// list of haplotypes by id

}

message Genotype { /**
  Genotype represents multiple changes at a single location
  */

  string id = 1;		     /// Genotype identifier
  repeated string haplotype_ids = 2; /// list of haplotypes by id
  Completeness completeness = 3;  /// Completeness of Genotype definition
}

message Meta {/**
	       */
  string vmc_version = 1;
}


message VMCBundle { /**
		     */
  string id = 1;
  Meta meta = 2;
  repeated Allele alleles = 3;
  repeated Haplotype haplotypes = 4;
  repeated Genotype genotypes = 5;
  map<Identifer, string> identifier_id_map = 6;

}