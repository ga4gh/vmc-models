# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vmc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import types_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='vmc.proto',
  package='org.ga4gh.vmc',
  serialized_pb=_b('\n\tvmc.proto\x12\rorg.ga4gh.vmc\x1a\x0btypes.proto\"j\n\x06\x41llele\x12\"\n\x06seqref\x18\x01 \x02(\x0b\x32\x12.SequenceReference\x12\x1b\n\x08interval\x18\x02 \x02(\x0b\x32\t.Interval\x12\x13\n\x0breplacement\x18\x03 \x02(\t\x12\n\n\x02id\x18\x04 \x01(\t\"*\n\x08Genotype\x12\x12\n\nallele_ids\x18\x01 \x03(\t\x12\n\n\x02id\x18\x02 \x01(\t\"+\n\tHaplotype\x12\x12\n\nallele_ids\x18\x01 \x03(\t\x12\n\n\x02id\x18\x02 \x01(\t\".\n\tDiplotype\x12\x15\n\rhaplotype_ids\x18\x01 \x03(\t\x12\n\n\x02id\x18\x02 \x01(\t')
  ,
  dependencies=[types_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ALLELE = _descriptor.Descriptor(
  name='Allele',
  full_name='org.ga4gh.vmc.Allele',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seqref', full_name='org.ga4gh.vmc.Allele.seqref', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='org.ga4gh.vmc.Allele.interval', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='replacement', full_name='org.ga4gh.vmc.Allele.replacement', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='org.ga4gh.vmc.Allele.id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=147,
)


_GENOTYPE = _descriptor.Descriptor(
  name='Genotype',
  full_name='org.ga4gh.vmc.Genotype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='allele_ids', full_name='org.ga4gh.vmc.Genotype.allele_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='org.ga4gh.vmc.Genotype.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=191,
)


_HAPLOTYPE = _descriptor.Descriptor(
  name='Haplotype',
  full_name='org.ga4gh.vmc.Haplotype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='allele_ids', full_name='org.ga4gh.vmc.Haplotype.allele_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='org.ga4gh.vmc.Haplotype.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=193,
  serialized_end=236,
)


_DIPLOTYPE = _descriptor.Descriptor(
  name='Diplotype',
  full_name='org.ga4gh.vmc.Diplotype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='haplotype_ids', full_name='org.ga4gh.vmc.Diplotype.haplotype_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='org.ga4gh.vmc.Diplotype.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=238,
  serialized_end=284,
)

_ALLELE.fields_by_name['seqref'].message_type = types_pb2._SEQUENCEREFERENCE
_ALLELE.fields_by_name['interval'].message_type = types_pb2._INTERVAL
DESCRIPTOR.message_types_by_name['Allele'] = _ALLELE
DESCRIPTOR.message_types_by_name['Genotype'] = _GENOTYPE
DESCRIPTOR.message_types_by_name['Haplotype'] = _HAPLOTYPE
DESCRIPTOR.message_types_by_name['Diplotype'] = _DIPLOTYPE

Allele = _reflection.GeneratedProtocolMessageType('Allele', (_message.Message,), dict(
  DESCRIPTOR = _ALLELE,
  __module__ = 'vmc_pb2'
  # @@protoc_insertion_point(class_scope:org.ga4gh.vmc.Allele)
  ))
_sym_db.RegisterMessage(Allele)

Genotype = _reflection.GeneratedProtocolMessageType('Genotype', (_message.Message,), dict(
  DESCRIPTOR = _GENOTYPE,
  __module__ = 'vmc_pb2'
  # @@protoc_insertion_point(class_scope:org.ga4gh.vmc.Genotype)
  ))
_sym_db.RegisterMessage(Genotype)

Haplotype = _reflection.GeneratedProtocolMessageType('Haplotype', (_message.Message,), dict(
  DESCRIPTOR = _HAPLOTYPE,
  __module__ = 'vmc_pb2'
  # @@protoc_insertion_point(class_scope:org.ga4gh.vmc.Haplotype)
  ))
_sym_db.RegisterMessage(Haplotype)

Diplotype = _reflection.GeneratedProtocolMessageType('Diplotype', (_message.Message,), dict(
  DESCRIPTOR = _DIPLOTYPE,
  __module__ = 'vmc_pb2'
  # @@protoc_insertion_point(class_scope:org.ga4gh.vmc.Diplotype)
  ))
_sym_db.RegisterMessage(Diplotype)


# @@protoc_insertion_point(module_scope)
